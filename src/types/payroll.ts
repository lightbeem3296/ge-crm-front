import { extractKeys } from "@/utils/record";
import { ComparableFilterField, StringFilterField, ObjectFilterField } from "./filter";

export interface FieldMapItem {
  field?: string,
  title?: string,
}

export enum PayrollExportFilterField {
  NAME = "name",
  M_NR = "m_nr",
  EMPLOYMENT_TYPE = "employment_type",
  COMMENT = "comment",
  MILEAGE_ALLOWANCE = "mileage_allowance",
  LUNCH = "lunch",
  DEPARTMENT = "department",
  TAX_DEDUCTION_CARD = "tax_deduction_card",
  APPLICABLE_RATE = "applicable_rate",
  POINTS_EARNED = "points_earned",
  POINTS_EARNED_EXTRA = "points_earned_extra",
  POINTS_DEDUCTION = "points_deduction",
  FIXED_SALARY_BONUS_KR = "fixed_salary_bonus_kr",
  FIRST_WORK_DATE = "first_work_date",
  LAST_WORK_DATE = "last_work_date",
  HOLIDAY_SETTLEMENT = "holiday_settlement",
  EARNED_POINTS_AUTO_GENERATED = "earned_points_auto_generated",
  SALARY_TYPE = "salary_type",
  ROLE = "role",
  START_PAY_PERIOD = "start_pay_period",
  END_PAY_PERIOD = "end_pay_period",
  LUNCH_CODE = "lunch_code",
  LUNCH_CODE_JUSTIFICATION = "lunch_code_justification",
  POINTS_TOTAL = "points_total",
  POINTS_BONUS = "points_bonus",
  TOTAL_KR = "total_kr",
  TOTAL_SALARY = "total_salary",
  AVAILABLE_ON_ACCOUNT = "available_on_account",
  PAYROLL_CODE = "payroll_code",
  AUTO_COMMENTS = "auto_comments",
  CALCULATED_NORM_HOURS = "calculated_norm_hours",
}

export interface PayrollExportFilter {
  name?: StringFilterField
  m_nr?: ObjectFilterField
  employment_type?: ObjectFilterField
  comment?: StringFilterField
  mileage_allowance?: StringFilterField
  lunch?: ObjectFilterField
  department?: StringFilterField
  tax_deduction_card?: ObjectFilterField
  applicable_rate?: ComparableFilterField
  points_earned?: ComparableFilterField
  points_earned_extra?: ComparableFilterField
  points_deduction?: ComparableFilterField
  fixed_salary_bonus_kr?: ComparableFilterField
  first_work_date?: ComparableFilterField
  last_work_date?: ComparableFilterField
  holiday_settlement?: StringFilterField
  earned_points_auto_generated?: ComparableFilterField
  salary_type?: ObjectFilterField
  role?: ObjectFilterField
  start_pay_period?: ComparableFilterField
  end_pay_period?: ComparableFilterField
  lunch_code?: StringFilterField
  lunch_code_justification?: StringFilterField
  points_total?: ComparableFilterField
  points_bonus?: ComparableFilterField
  total_kr?: ComparableFilterField
  total_salary?: ComparableFilterField
  available_on_account?: ComparableFilterField
  payroll_code?: StringFilterField
  auto_comments?: StringFilterField
  calculated_norm_hours?: ComparableFilterField
}

export interface PayrollExportRequest extends PayrollExportPreviewRequest {
  filename: string,
}

export interface PayrollExportResponse {
  total_rows: number,
  preview_content: any[], // eslint-disable-line
}

export interface PayrollExportPreviewRequest {
  field_map?: FieldMapItem[],
  filter?: PayrollExportFilter,
  rule?: string,
}

export interface PayrollExportPreviewResponse {
  total_rows: number,
  preview_content: any[], // eslint-disable-line
}

export const fieldMapMapping: Record<string, string> = {
  "name": "Name",
  "m_nr": "M-Nr",
  "employment_type": "Employment Type",
  "comment": "Comment",
  "mileage_allowance": "mileage Allowance",
  "lunch": "Lunch",
  "department": "Department",
  "tax_deduction_card": "Tax Card",
  "applicable_rate": "Applicable Rate",
  "points_earned": "Points Earned",
  "points_earned_extra": "Points Earned Extra",
  "points_deduction": "Points Deduction",
  "fixed_salary_bonus_kr": "Fixed Salary Bonus",
  "first_work_date": "First Work Date",
  "last_work_date": "Last Work Date",
  "holiday_settlement": "Holiday Settlement",
  "earned_points_auto_generated": "Earned Points Autogenerated",
  "salary_type": "Salary Type",
  "role": "Role",
  "start_pay_period": "Pay Period Start Date",
  "end_pay_period": "Pay Period End Date",
  "lunch_code": "Lunch Code",
  "lunch_code_justification": "Lunch Code Justification",
  "points_total": "Points Total",
  "points_bonus": "Points Bonus",
  "total_kr": "Total KR",
  "total_salary": "Total Salary",
  "available_on_account": "Available on Account",
  "payroll_code": "Payroll Code",
  "auto_comments": "Auto Comments",
  "calculated_norm_hours": "Calculated Norm Hours",
}
export const fieldMapCodes = extractKeys(fieldMapMapping);

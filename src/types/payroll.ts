import { extractKeys } from "@/utils/record";
import { ComparableFilterField, StringFilterField, ObjectFilterField } from "./filter";

export interface FieldMapItem {
  field?: string,
  title?: string,
}

export enum PayrollExportFilterField {
  USERNAME = "username",
  M_NR = "m_nr",
  ROLE = "role",
  DEPARTMENT = "department",
  EMPLOYMENT_START_DATE = "employment_start_date",
  EMPLOYMENT_END_DATE = "employment_end_date",
  SALARY_TYPE = "salary_type",
  HOURLY_RATE = "hourly_rate",
  HOURS_WORKED = "hours_worked",
  POINTS_EARNED = "points_earned",
  SALARY = "salary",
  BONUS = "bonus",
  DEDUCTION = "deduction",
}

export interface PayrollExportFilter {
  username?: StringFilterField,
  m_nr?: ObjectFilterField,
  role?: ObjectFilterField,
  department?: StringFilterField,
  employment_start_date?: ComparableFilterField,
  employment_end_date?: ComparableFilterField,
  salary_type?: ObjectFilterField,
  hourly_rate?: ComparableFilterField,
  hours_worked?: ComparableFilterField,
  points_earned?: ComparableFilterField,
  salary?: ComparableFilterField,
  bonus?: ComparableFilterField,
  deduction?: ComparableFilterField,
}

export interface PayrollExportRequest extends PayrollExportPreviewRequest {
  filename: string,
}

export interface PayrollExportResponse {
  total_rows: number,
  preview_content: any[], // eslint-disable-line
}

export interface PayrollExportPreviewRequest {
  field_map?: FieldMapItem[],
  filter?: PayrollExportFilter,
  rule?: string,
}

export interface PayrollExportPreviewResponse {
  total_rows: number,
  preview_content: any[], // eslint-disable-line
}

export const fieldMapMapping: Record<string, string> = {
  "name": "Name",
  "m_nr": "M-Nr",
  "employment_type": "Employment Type",
  "comment": "Comment",
  "mileasge_allowance": "Mileasge Allowance",
  "lunch": "Lunch",
  "department": "Department",
  "tax_deduction_card": "Tax Card",
  "applicable_rate": "Applicable Rate",
  "points_earned": "Points Earned",
  "points_earned_extra": "Points Earned Extra",
  "points_deduction": "Points Deduction",
  "fixed_salary_bonus_kr": "Fixed Salary Bonus",
  "first_work_date": "First Work Date",
  "last_work_date": "Last Work Date",
  "holiday_settlement": "Holiday Settlement",
  "earned_points_auto_generated": "Earned Points Autogenerated",
  "start_pay_period": "Pay Period Start Date",
  "end_pay_period": "Pay Period End Date",
  "lunch_code": "Lunch Code",
  "lunch_code_justification": "Lunch Code Justification",
  "points_total": "Points Total",
  "points_bonus": "Points Bonus",
  "total_kr": "Total KR",
  "total_salary": "Total Salary",
  "available_on_account": "Available on Account",
  "payroll_code": "Payroll Code",
  "auto_comments": "Auto Comments",
  "calculated_norm_hours": "Calculated Norm Hours",
}
export const fieldMapCodes = extractKeys(fieldMapMapping);
